# Task ID: 16
# Title: Implement Profile Completion Page After First Login
# Status: pending
# Dependencies: 1
# Priority: high
# Description: Create role-based profile pages at `/realtor/profile` and `/client/profile` that display user information and allow editing. After login, redirect users with incomplete profiles to their respective role-based profile page with a toast notification prompting them to complete their information.
# Details:
1. Design responsive role-based profile pages at `/realtor/profile` and `/client/profile` routes
2. Implement form with fields for full name and WhatsApp number for both role types
3. Add client-side validation for both fields:
   - Full name: Ensure it's not empty and follows proper name format
   - WhatsApp: Validate phone number format with country code
4. Create Supabase function to update the 'profiles' table with the collected information, including the new 'role' column
5. Implement Nuxt middleware for authentication and role-based routing:
   - Check if user is authenticated
   - Determine user role from the 'role' column in the 'profiles' table
   - Check if user profile is incomplete (e.g., missing full_name)
   - Redirect to appropriate role-based profile page if incomplete (`/realtor/profile` or `/client/profile`)
   - Redirect to appropriate dashboard if complete (`/realtor/dashboard` or `/client/dashboard`)
   - Protect role-specific routes (prevent realtors from accessing client routes and vice versa)
6. Add toast notification system to prompt users to complete their profile when redirected to their role-based profile page
7. Display current profile information if it exists and allow editing
8. Implement error handling for database operations
9. Create success feedback after profile completion
10. Ensure the solution works with both authentication methods (email/password and Google OAuth)
11. Update user context/state after profile completion, including role information
12. Add a "Save Changes" button to submit profile updates
13. Implement proper navigation options to return to appropriate role-based dashboard after completion

# Test Strategy:
1. Unit tests:
   - Test form validation logic for both fields
   - Test Supabase update functions with mock data
   - Test profile completion detection logic
   - Test role-based middleware logic

2. Integration tests:
   - Test end-to-end flow from login to role-based profile completion
   - Verify database updates correctly after form submission
   - Test redirection logic to appropriate role-based pages
   - Test with both authentication methods (email/password and Google OAuth)
   - Test role-based route protection

3. User acceptance testing:
   - Verify toast notification appears correctly when redirected to profile page
   - Test form submission with valid and invalid data
   - Verify user experience on different devices and screen sizes
   - Test navigation between profile pages and role-appropriate dashboards
   - Test role-specific features and access restrictions

4. Edge case testing:
   - Test behavior when user refreshes page during profile completion
   - Test when network connection is lost during submission
   - Verify handling of special characters in name fields
   - Test behavior when a user manually navigates to role-based profile pages
   - Test scenarios where a user might try to access routes for a different role
